{"version":3,"sources":["images/arrow-up.svg","images/arrow-down.svg","pages/home/home.js","pages/products/products.js","pages/detailsPage/detailsPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","state","topProducts","sortedProducts","data","sort","a","b","price","slice","this","setState","console","log","className","to","map","product","key","id","pathname","slug","name","value","displayType","thousandSeparator","suffix","decimalSeparator","decimalScale","fixedDecimalScale","React","Component","sortProducts","products","sortingOrder","Products","initialArray","productsArray","filterTerm","setSortingOrder","order","props","history","replace","search","onChangeHandler","e","target","parse","queryString","location","prevProps","parsed","onClick","htmlFor","type","placeholder","onChange","goBack","src","arrowUp","alt","arrowDown","filter","toLowerCase","includes","shortDescription","DetailsPage","nextSlug","prevSlug","previousPage","previousProduct","preventDefault","nextProduct","currentProduct","find","match","params","index","indexOf","image","description","App","basename","path","component","exact","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d386cb73.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow-up.48762eb4.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-down.958a82bf.svg\";","import React from \"react\";\nimport \"./home.css\";\nimport { Link } from \"react-router-dom\";\nimport data from \"../../data/products.json\";\nimport NumberFormat from \"react-number-format\";\n\nclass Home extends React.Component {\n  state = {\n    topProducts: [],\n  };\n\n  componentDidMount() {\n    const sortedProducts = data\n      .sort((a, b) => {\n        return a.price < b.price ? 1 : -1;\n      })\n      .slice(0, 4);\n    this.setState({\n      topProducts: [...this.state.topProducts, ...sortedProducts],\n    });\n  }\n\n  render() {\n    console.log(this.state.topProducts);\n\n    return (\n      <section>\n        <div className=\"header-wrapper\">\n          <h1 className=\"headline\">Welcome, visitor!</h1>\n          <Link to=\"/products\">\n            <div className=\"productsLinkButton\">Go to products</div>\n          </Link>\n        </div>\n        <section className=\"top-product\">\n          {this.state.topProducts.map((product) => {\n            return (\n              <section className=\"price-wrapper\">\n                <Link\n                  key={product.id}\n                  to={{ pathname: `products/${product.slug}` }}\n                >\n                  <div>\n                    <p className=\"top-product-name\">\n                      {product.name}\n                      <p className=\"top-product-price\">\n                        <NumberFormat\n                          value={product.price}\n                          displayType={\"text\"}\n                          thousandSeparator={\".\"}\n                          suffix={\"â‚¬\"}\n                          decimalSeparator={\",\"}\n                          decimalScale={\"2\"}\n                          fixedDecimalScale={\"true\"}\n                        />\n                      </p>\n                    </p>\n                  </div>\n                </Link>\n              </section>\n            );\n          })}\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./products.css\";\nimport data from \"../../data/products.json\";\nimport { Link } from \"react-router-dom\";\nimport NumberFormat from \"react-number-format\";\nimport queryString from \"query-string\";\nimport arrowUp from \"../../images/arrow-up.svg\";\nimport arrowDown from \"../../images/arrow-down.svg\";\n\nconst sortProducts = (products, sortingOrder) => {\n  if (sortingOrder === \"asc\")\n    return [...products].sort((a, b) => a.price - b.price);\n  if (sortingOrder === \"dsc\")\n    return [...products].sort((a, b) => b.price - a.price);\n  return [...products];\n};\n\nclass Products extends React.Component {\n  state = {\n    initialArray: [...data],\n    productsArray: [...data],\n    filterTerm: \"\",\n  };\n\n  componentDidMount() {\n    let parse = queryString.parse(this.props.location.search);\n    this.setState({\n      productsArray: sortProducts(this.state.productsArray, parse.sort),\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.search !== this.props.location.search) {\n      let parse = queryString.parse(this.props.location.search);\n      this.setState({\n        productsArray: parse.sort\n          ? sortProducts(this.state.productsArray, parse.sort)\n          : this.state.initialArray,\n      });\n    }\n  }\n\n  setSortingOrder = (order = \"\") => {\n    this.props.history.replace({\n      pathname: \"/products\",\n      search: order ? `?sort=${order}` : \"\",\n    });\n  };\n\n  onChangeHandler = (e) => {\n    this.setState({\n      filterTerm: e.target.value,\n    });\n  };\n\n  render() {\n    const parsed = queryString.parse(this.props.location.search);\n    return (\n      <>\n        <section className=\"products-header\">\n          <div className=\"button-container\">\n            <button\n              onClick={() => this.setSortingOrder()}\n              className=\"reset-button\"\n            >\n              Reset\n            </button>\n            <button\n              onClick={() => this.setSortingOrder(\"asc\")}\n              className=\"sort-ascending-button\"\n            >\n              Sort\n            </button>\n            <button\n              onClick={() => this.setSortingOrder(\"dsc\")}\n              className=\"sort-descending-button\"\n            >\n              Sort\n            </button>\n          </div>\n          <div className=\"filter-container\">\n            <label htmlFor=\"filter\">\n              <span>Filter by name or description</span>\n            </label>\n            <input\n              type=\"text\"\n              name=\"filter\"\n              id=\"filter\"\n              placeholder=\"Type name or description here\"\n              onChange={this.onChangeHandler}\n            />\n          </div>\n        </section>\n        <ul>\n          <div className=\"button-list-wrapper\">\n            <button\n              onClick={this.props.history.goBack}\n              className=\"arrow\"\n            ></button>\n            <h2 className=\"product-list-header\">Product List</h2>\n            {parsed.sort === \"asc\" ? (\n              <p className=\"asc-dsc-label\">ascending</p>\n            ) : parsed.sort === \"dsc\" ? (\n              <p className=\"asc-dsc-label\">descending</p>\n            ) : (\n              \"\"\n            )}\n          </div>\n          <li className=\"list-header\">\n            <h3>NAME</h3>\n            <h3>DESCRIPTION</h3>\n            <div className=\"price-column-headline-container\">\n              <h3 className=\"price-column-headline\">\n                PRICE\n                {parsed.sort === \"asc\" ? (\n                  <img src={arrowUp} alt=\"arrowUp\" />\n                ) : parsed.sort === \"dsc\" ? (\n                  <img src={arrowDown} alt=\"arrowUp\" />\n                ) : (\n                  \"\"\n                )}\n              </h3>\n            </div>\n          </li>\n          {this.state.productsArray\n            .filter(\n              (product) =>\n                product.name\n                  .toLowerCase()\n                  .includes(this.state.filterTerm.toLowerCase()) ||\n                product.shortDescription\n                  .toLowerCase()\n                  .includes(this.state.filterTerm.toLowerCase())\n            )\n            .map((product) => {\n              return (\n                <Link\n                  key={product.id}\n                  //   to={{ pathname: `products/${product.slug}` }}\n                  to={`products/${product.slug}`}\n                >\n                  <li className=\"list-item\">\n                    <p>{product.name}</p>\n                    <p>{product.shortDescription}</p>\n                    <p>\n                      <NumberFormat\n                        value={product.price}\n                        displayType={\"text\"}\n                        thousandSeparator={\".\"}\n                        suffix={\"â‚¬\"}\n                        decimalSeparator={\",\"}\n                        decimalScale={\"2\"}\n                        fixedDecimalScale={\"true\"}\n                      />\n                    </p>\n                  </li>\n                </Link>\n              );\n            })}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default Products;\n","import React from \"react\";\nimport \"./detailsPage.css\";\nimport data from \"../../data/products.json\";\nimport NumberFormat from \"react-number-format\";\n\nclass DetailsPage extends React.Component {\n  state = {\n    product: \"\",\n    nextSlug: \"\",\n    prevSlug: \"\",\n  };\n\n  previousPage = () => {\n    this.props.history.goBack();\n  };\n\n  previousProduct = (e) => {\n    e.preventDefault();\n    this.props.history.replace({\n      pathname: `/products/${this.state.prevSlug}`,\n    });\n  };\n\n  nextProduct = (e) => {\n    e.preventDefault();\n    this.props.history.replace({\n      pathname: `/products/${this.state.nextSlug}`,\n    });\n  };\n\n  componentDidMount() {\n    let currentProduct = data.find((product) => {\n      return this.props.match.params.slug === product.slug;\n    });\n    let index = data.indexOf(currentProduct);\n    this.setState({\n      product: currentProduct,\n      nextSlug: data[index + 1] && data[index + 1].slug,\n      prevSlug: data[index - 1] && data[index - 1].slug,\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.slug !== prevProps.match.params.slug) {\n      let currentProduct = data.find((product) => {\n        return this.props.match.params.slug === product.slug;\n      });\n      let index = data.indexOf(currentProduct);\n      this.setState({\n        product: currentProduct,\n        nextSlug: data[index + 1] && data[index + 1].slug,\n        prevSlug: data[index - 1] && data[index - 1].slug,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"details-container\">\n        <section className=\"details-header\">\n          <button\n            onClick={this.props.history.goBack}\n            className=\"arrow\"\n          ></button>\n          <h1>{this.state.product.name}</h1>\n        </section>\n        <img\n          className=\"product-image\"\n          src={this.state.product.image}\n          alt=\"product\"\n        />\n        <p>{this.state.product.description}</p>\n        <p className=\"price\">\n          <NumberFormat\n            value={this.state.product.price}\n            displayType={\"text\"}\n            thousandSeparator={\".\"}\n            suffix={\"â‚¬\"}\n            decimalSeparator={\",\"}\n            decimalScale={\"2\"}\n            fixedDecimalScale={\"true\"}\n          />\n        </p>\n        <div className=\"nav-button-container\">\n          <div>\n            {this.state.prevSlug && (\n              <div className=\"prev-button-container\">\n                <button\n                  onClick={this.previousProduct}\n                  className=\"arrow\"\n                ></button>\n                <span>Previous</span>\n              </div>\n            )}\n          </div>\n\n          <div>\n            {this.state.nextSlug && (\n              <div className=\"next-button-container\">\n                <span>Next</span>\n                <button\n                  onClick={this.nextProduct}\n                  className=\"arrow arrow-forward\"\n                ></button>\n              </div>\n            )}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default DetailsPage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/home/home\";\nimport Products from \"./pages/products/products\";\n\nimport \"./App.css\";\nimport DetailsPage from \"./pages/detailsPage/detailsPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename=\"/react-params-product-list\">\n        <Switch>\n          <Route path=\"/products/:slug\" component={DetailsPage}></Route>\n          <Route path=\"/products\" component={Products}></Route>\n          <Route exact path=\"/\" component={Home}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}